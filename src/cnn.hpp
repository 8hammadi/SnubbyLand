double relu(double x){
 return x>0?x:0;
}
double sigmoid(double x){
 return 1/(1+exp(-x));
}
vector<double>  dot(vector<vector<double>> A, vector<double> x,vector<vector<double>> b,int sig)
{
    vector<double> y;
    double e = 0;
    for(int i = 0; i < A.size(); i++)
    {
        e = b[i][0];
        for(int j = 0; j < A[0].size(); j++)
        {
            e += A[i][j] * x[j];;
        }
        if(sig)
        y.push_back(sigmoid(e));
     else 
     y.push_back(relu(e));
    }

    return y;

}
class Model
{

public:
    vector<int> layers = {2, 20, 4};

    vector<vector<vector<double>>> W = {{{2.2461621666185256, 0.7537340181533854}, {-0.2691364559503657, 1.0300472379707113}, {-0.5355224969751627, -0.8522562778109076}, {0.6714021226766453, -1.194725358447809}, {-0.0162249709368086, -0.2478284917942703}, {1.1052925131361728, -0.4167869146676777}, {-0.759276640268331, 0.8415466262010215}, {-1.3957553083826206, -0.22894813085939478}, {0.5955474818953694, -0.3158090060600975}, {0.43982169423217654, -0.7756242022194371}, {-0.9322174945887048, -0.058611416481907416}, {0.7731549515354227, -0.5913848459268376}, {2.7316716937958345, 0.5268307626573178}, {0.735902931843456, -1.4272641935543569}, {0.5199838842262359, 0.320011141657911}, {0.9694851048167086, -0.717546271710696}, {1.2449428957702169, -0.6907239400187909}, {1.1868903578739802, 0.3577081965800124}, {-1.1636039857779013, -1.3780927987108211}, {0.9710509928385263, 0.024363724640523624}}, {{-0.0655150912086383, 0.8048376085692912, 0.0644207127096943, -0.13430749343582263, 0.4155618573211795, 0.11365115855010303, 0.4728931973834658, -0.35772029393807697, 0.12996294180902868, -0.1851349230393472, -0.12504027152846683, -0.9188901984201355, -0.0891781382857911, 0.020697018349712635, 0.1736057210215593, -0.6174366972080254, -0.07914076799384123, -0.3488280036637396, -0.035275968398626484, -0.09953898247899531}}};
    vector<vector<vector<double>>> b={{{0.01797934663626548}, {0.026053831438700204}, {-0.0010736785451615717}, {0.05758998903045996}, {-0.006926030955352993}, {-0.039143085066458784}, {0.008544255127870624}, {0.19297677558346113}, {-0.03359859898576226}, {0.10075730074592806}, {0.058611394905420375}, {0.5621373817800752}, {-0.03882309591030394}, {-0.01605688331479753}, {1.4545994172306155e-08}, {0.35791897744619955}, {-0.0063883494293615626}, {0.0434474449512049}, {0.019030071126826753}, {0.004540322049983827}}, {{-0.103466069421785}}};

    Model(vector<int> layers)
    {
        this->layers = layers;
    }
    vector<double> predict(vector<double> input)
    {
        for(int k = 0; k < layers.size() - 2; k++)
        {
            input = dot(W[k], input,b[k],0);
        }
        input = dot(W[layers.size() - 2], input,b[layers.size() - 2],1);
        return input;
    }
};
